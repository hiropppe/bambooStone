from bamboo.ai.rollout import RolloutPolicyPlayer
from bamboo.rollout.pattern import read_rands, init_nakade_hash, init_x33_hash, init_d12_hash
from bamboo.rollout.preprocess import initialize_const
from bamboo.gtp.gtp_connector import GTPGameConnector
from bamboo.gtp.gtp_wrapper import ExtendedGtpEngine

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser(description='Run GTP')
    parser.add_argument("weights",
                        help="Rollout policy weights hdf5.")
    parser.add_argument("--n-playout", type=int, default=10,
                        help="Number of simulation for each play")
    parser.add_argument("--server", default=False, action="store_true",
                        help="Server mode")
    parser.add_argument("--policy-temp", type=float, default=0.67,
                        help="Distribution temperature of players using policies (Default: 0.67)")
    parser.add_argument("--mt-rands-file", "-mt", required=True, type=str, default=None,
                        help="Mersenne twister random number file. Default: None")
    parser.add_argument("--nakade-file", "-n", type=str, default=None,
                        help="Nakade pattern file. Default: None")
    parser.add_argument("--x33-file", "-x33", type=str, default=None,
                        help="3x3 pattern file. Default: None")
    parser.add_argument("--d12-file", "-d12", type=str, default=None,
                        help="12 Diamond pattern file. Default: None")

    args = parser.parse_args()

    read_rands(args.mt_rands_file)
    nakade_size = init_nakade_hash(args.nakade_file)
    x33_size = init_x33_hash(args.x33_file)
    d12_size = init_d12_hash(args.d12_file)

    set_rollout_parameter(args.weights, args.policy_temp)
    initialize_const(nakade_size, x33_size, d12_size)

    player = RolloutPolicyPlayer()

    gtp_game = GTPGameConnector()
    gtp_game.set_rollout(player)
    gtp_engine = ExtendedGtpEngine(gtp_game, name='bambooStone', version='0.0')

    if args.server:
        from flask import Flask
        from flask import request

        app = Flask(__name__)

        @app.route('/gtp')
        def gtp():
            cmd = request.args.get('cmd')
            print(cmd)
            engine_reply = gtp_engine.send(cmd)
            print(engine_reply)
            return engine_reply

        app.run(host="0.0.0.0", port=5001, debug=False, threaded=True)
    else:
        from bamboo.gtp.gtp_wrapper import run_gtp
        run_gtp(gtp_game)
